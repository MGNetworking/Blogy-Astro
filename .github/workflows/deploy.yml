name: Deploy Astro to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          # Quelle branche télécharger (par défaut = branche qui a déclenché l'action)
          ref: 'main'
          # Combien de commits télécharger (0 = tout l'historique, 1 = seulement le dernier)
          fetch-depth: 1
          # Télécharger aussi les submodules Git si tu en as
          submodules: false
          # Token pour l'authentification (par défaut = token automatique GitHub)
          token: ${{ github.token }}
          
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          # Version exacte de Node.js à installer
          node-version: '22'
          # Type de cache pour les dépendances (npm, yarn, pnpm)
          cache: 'npm'
          # Chemin vers le fichier de lock (par défaut = package-lock.json à la racine)
          cache-dependency-path: 'package-lock.json'
          # Forcer le téléchargement de la dernière version même si une version est en cache
          check-latest: false
          # Architecture du processeur (x64, x86, arm64)
          architecture: 'x64'
          
      - name: Create .env file
        run: |
          echo "TOKEN_GITHUB=${{ secrets.TOKEN_GITHUB }}" >> .env
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Astro project
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      # Où uploader les fichiers compilés
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist' # ← Dossier à déployer
          
  deploy:
    environment:
      name: github-pages  # ← Cible GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # ← Script qui déploie vers Pages