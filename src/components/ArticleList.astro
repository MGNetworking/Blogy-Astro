---
import { getGithubArticles, parseMarkdown } from "../services/github.js";

const mdFiles = await getGithubArticles();

const articles = await Promise.all(
  mdFiles.map(async (file) => {
    const contentResponse = await fetch(file.download_url);
    const rawContent = await contentResponse.text();
    const { frontmatter } = parseMarkdown(rawContent);

    return {
      id: file.name.replace(".md", ""),
      data: frontmatter,
    };
  })
);
---

<html>
  <head>
    <title>Mes articles</title>
  </head>
  <body class="py-20 bg-gray-800 text-white">
    <div class="max-w-4xl mx-auto px-4">
      <h1 class="text-4xl font-bold mb-8">
        Mes articles ({articles.length})
      </h1>

      <div class="space-y-6">
        {
          articles.map((article) => (
            <article class="bg-gray-700 p-6 rounded-lg">
              <h2 class="text-2xl font-bold mb-2">
                <a
                  href={`/article/${article.id}`}
                  class="text-blue-400 hover:text-blue-300"
                >
                  {article.data.title}
                </a>
              </h2>

              <div class="text-gray-300 mb-4">
                {article.data.author && <p>‚úçÔ∏è Par : {article.data.author}</p>}
                {article.data.date && <p>üìÖ Date : {article.data.date}</p>}
              </div>

              {article.data.description && (
                <p class="text-gray-200 mb-4">{article.data.description}</p>
              )}

              <a
                href={`/article/${article.id}`}
                class="inline-block bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white"
              >
                Lire l'article ‚Üí
              </a>
            </article>
          ))
        }
      </div>
    </div>
  </body>
</html>
